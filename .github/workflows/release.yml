on:
  workflow_dispatch:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release
env:
  REPO_NAME: Vulkan-Video-Samples
  PRETTY_NAME: Vulkan-Video-Samples
jobs:
  build-release:
    name: Build release
    uses: ./.github/workflows/main.yml
  process-artifacts:
    name: Process Release Artifacts
    runs-on: ubuntu-latest
    needs: build-release
    strategy:
      matrix:
        platform: [linux-x86_64, linux-x86_64-ffmpeg, linux-x86, windows-x64, windows-x64-ffmpeg, win-arm64]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.REPO_NAME }}-release-${{ matrix.platform }}
          path: ./
      - name: Rename artifact
        shell: bash
        run: |
          mv ${{ env.REPO_NAME }}-release-${{ matrix.platform }}.zip ${{ env.REPO_NAME }}-${{ github.ref_name }}-${{ matrix.platform }}.zip
      - name: Upload renamed artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPO_NAME }}-${{ github.ref_name }}-${{ matrix.platform }}
          path: ${{ env.REPO_NAME }}-${{ github.ref_name }}-${{ matrix.platform }}.zip

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: process-artifacts
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ github.ref_name }}
          release_name: ${{ env.PRETTY_NAME }} ${{ github.ref_name }}
          body: |
            ${{ env.PRETTY_NAME }}-${{ github.ref_name }} has been released. You can find details [here](https://github.com/KhronosGroup/${{ env.PRETTY_NAME }}/blob/main/Changelog.md)
          draft: false
          prerelease: false

  upload-assets:
    name: Upload Release Assets
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        platform: [linux-x86_64, linux-x86_64-ffmpeg, linux-x86, windows-x64, windows-x64-ffmpeg, win-arm64]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.REPO_NAME }}-${{ github.ref_name }}-${{ matrix.platform }}
          path: ./
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ env.REPO_NAME }}-${{ github.ref_name }}-${{ matrix.platform }}.zip
          asset_name: ${{ env.REPO_NAME }}-${{ github.ref_name }}-${{ matrix.platform }}.zip
          asset_content_type: application/zip
